def split_array(arr, start, end):
    pivot_pos= arr[end]
    min_idx =start - 1  
    for present_idx in range(start, end):
        if arr[present_idx]<= pivot_pos:
            min_idx +=1
            arr[min_idx],arr[present_idx] =arr[present_idx],arr[min_idx]  
    arr[min_idx + 1], arr[end] = arr[end], arr[min_idx + 1] 
    return min_idx + 1
def quick_sort(arr,start,end):
    if start<end:
        pivot_pos=split_array(arr, start, end)
        quick_sort(arr,start, pivot_pos- 1) 
        quick_sort(arr,pivot_pos+1, end)  
def find_ith_smallest(arr,goal_idx):
    if goal_idx<1 or goal_idx >len(arr): 
        return None
    left,right=0,len(arr) - 1
    goal_idx-=1
    while left<=right:
        pivot_pos=split_array(arr, left, right)
        if pivot_pos==goal_idx:
            return arr[pivot_pos]
        elif pivot_pos>goal_idx:
            right=pivot_pos- 1
        else:
            left=pivot_pos + 1
array = [25,15,10,5,7,6,20,30,40,34]
idx =4
quick_sort(array, 0, len(array) - 1)
print("Sorted array:", array)
ith_smallest = find_ith_smallest(array, idx)
print(f"The {idx}th order statistic is: {ith_smallest}")
